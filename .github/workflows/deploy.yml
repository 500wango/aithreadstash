name: Deploy to Production Server

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy over SSH to Production Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "🚀 Starting deployment process..."
            
            # Set up environment
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            
            # Go to deployment directory
            DEPLOY_DIR="/opt/aithreadstash"
            sudo mkdir -p $DEPLOY_DIR
            sudo chown $USER:$USER $DEPLOY_DIR
            cd $DEPLOY_DIR
            
            # Clone or pull latest code
            if [ -d .git ]; then
              echo "📦 Pulling latest code..."
              git fetch origin
              git reset --hard origin/main
              git clean -fd
            else
              echo "📦 Cloning repository..."
              git clone https://github.com/500wango/aithreadstash.git .
              git checkout main
            fi
            
            # Backend deployment
            echo "🔧 Deploying backend..."
            cd backend
            
            # Install dependencies
            npm ci --production
            
            # Build the application
            npm run build
            
            # Set up environment variables
            if [ ! -f .env ]; then
              cp .env.example .env
              echo "⚠️  Please configure .env file with your production values"
            fi
            
            # Run database migrations
            echo "🗄️  Running database migrations..."
            npm run migration:run
            
            # Start backend with PM2
            echo "🚀 Starting backend service..."
            npm install -g pm2
            pm2 delete backend || true
            pm2 start ecosystem.config.js --env production
            
            # Frontend deployment
            echo "🔧 Deploying frontend..."
            cd ../frontend-website
            
            # Install dependencies
            npm ci --production
            
            # Build the application
            npm run build
            
            # Start frontend with PM2
            echo "🚀 Starting frontend service..."
            pm2 delete frontend || true
            pm2 start ecosystem.config.js --env production
            
            # Save PM2 configuration
            pm2 save
            pm2 startup
            
            echo "✅ Deployment completed successfully!"
            echo "🌐 Backend is running on: http://localhost:3001"
            echo "🌐 Frontend is running on: http://localhost:3000"
            
            # Set up Nginx configuration (if needed)
            echo "📋 Please configure Nginx to proxy requests to these ports"